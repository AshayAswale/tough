<launch>

    <arg name="init" default="true"/>
    <arg name="controller" default="true" />

    <group if="$(arg controller)">
        <include file="$(find val_bringup)/launch/common/qual1_controller.launch">
            <arg name="init" value="$(arg init)"/>
        </include>
    </group>


    <group unless="$(arg controller)">
        <include file="$(find val_bringup)/launch/common/qual1_no_controller.launch" />
    </group>

   <!-- Start spinning the lidar   @TODO: implement this using a parameter or check if one exists already-->
   <node pkg="rostopic" type="rostopic" name="rostopic" args="pub /multisense/set_spindle_speed -l std_msgs/Float64 2"/> 

   <!-- Start val_laser2point_cloud_node to publish pointcloud2 data -->
   <node pkg="val_laser2point_cloud" type="val_laser2point_cloud_node" name="val_laser2point_cloud_node"/>

   <!-- Start stereo_image_proc to pusblish disparity image -->
   <node ns="/multisense/camera" name="stereo_proc" pkg="stereo_image_proc" type="stereo_image_proc" respawn="false" output="log">
  	<param name="disparity_range" type="int" value="128"/>
  	<param name="approximate_sync" type="bool" value="false"/> 
   <!-- remap from="/multisense/camera/disparity" to="/multisense/left/disparity" / -->
   <remap from="/multisense/camera/points2" to="/multisense/image_points2" />
</node>

<!-- Turn on the lights -->
<!--<node pkg="rostopic" type="rostopic" name="lights" args="pub /srcsim/qual1/start std_msgs/Empty"/>-->

</launch>
